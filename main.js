(()=>{"use strict";function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var t=function(){function t(e,n,r,o,i,u){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this._name=e.name,this._link=e.link,this._id=e.owner._id,this._userId=u,this._templateSelector=n,this._handleCardClick=r,this._handleOpenPopup=o,this._likeNumber=i}var n,r;return n=t,(r=[{key:"_getTemplate",value:function(){return console.log(this._templateSelector),document.querySelector(this._templateSelector).content.querySelector(".element").cloneNode(!0)}},{key:"generateCard",value:function(){return this._element=this._getTemplate(),this._cardImage=this._element.querySelector(".element__photo"),this._cardLike=this._element.querySelector(".element__like"),this._cardBasket=this._element.querySelector(".element__basket"),this._setEventListeners(),this._removeCardBasket(),this._element.querySelector(".element__title").textContent=this._name,this._element.querySelector(".element__like__counter").textContent=this._likeNumber,this._cardImage.src=this._link,this._cardImage.alt=this._name,this._element}},{key:"_setEventListeners",value:function(){var e=this;this._cardLike.addEventListener("click",(function(){e._handleLike()})),this._element.querySelector(".element__basket").addEventListener("click",(function(){e._handleOpenPopup()})),this._cardImage.addEventListener("click",(function(){e._handleCardClick(e._name,e._link)}))}},{key:"_handleLike",value:function(){this._cardLike.classList.toggle("element__like_active")}},{key:"_removeCardBasket",value:function(){this._element.owner._id!==this._userId&&this._cardBasket.remove()}},{key:"getView",value:function(){return this._element}}])&&e(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),t}();function n(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}const o=function(){function e(t,n){var o=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),r(this,"_showInputError",(function(e){var t=o._form.querySelector("#".concat(e.id,"-error"));t.textContent=e.validationMessage,t.classList.add(o._errorClass),e.classList.add(o._inputErrorClass)})),r(this,"_hideInputError",(function(e){var t=o._form.querySelector("#".concat(e.id,"-error"));t.textContent=" ",t.classList.remove(o._errorClass),e.classList.remove(o._inputErrorClass)})),r(this,"_hasInvalidInput",(function(e){return Array.from(e).some((function(e){return!e.validity.valid}))})),r(this,"_toggleButtonError",(function(e){o._hasInvalidInput(o._inputs)?o.disableSubmitButton():o.enableSubmitButton()})),r(this,"_setInputListeners",(function(){o._inputs=o._form.querySelectorAll(o._inputSelector),o._submitButton=o._form.querySelector(o._submitButtonSelector),o._inputs.forEach((function(e){e.addEventListener("input",(function(){o._checkIfInputValid(e),o._toggleButtonError(o._submitButton)}))}))})),r(this,"enableValidation",(function(){o._form.addEventListener("submit",(function(e){e.preventDefault()})),o._setInputListeners()})),this._form=n,this._formSelector=t.formSelector,this._inputSelector=t.inputSelector,this._submitButtonSelector=t.submitButtonSelector,this._inactiveButtonClass=t.inactiveButtonClass,this._inputErrorClass=t.inputErrorClass,this._errorClass=t.errorClass}var t,o;return t=e,(o=[{key:"resetValidation",value:function(){var e=this;this._toggleButtonError(this._submitButton),this._inputs.forEach((function(t){e._hideInputError(t)}))}},{key:"disableSubmitButton",value:function(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}},{key:"enableSubmitButton",value:function(){this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}},{key:"_checkIfInputValid",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}}])&&n(t.prototype,o),Object.defineProperty(t,"prototype",{writable:!1}),e}();function i(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var u=function(){function e(t,n){var r=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderer=r,this._container=n}var t,n;return t=e,(n=[{key:"addItem",value:function(e){this._container.append(e)}},{key:"clear",value:function(){this._container.innerHTML=""}},{key:"renderItems",value:function(e){var t=this;this.clear(),e.forEach((function(e){t._renderer(e)}))}},{key:"prependItem",value:function(e){this._container.prepend(e)}}])&&i(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function c(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var a=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popup=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this),this.close=this.close.bind(this)}var t,n;return t=e,(n=[{key:"open",value:function(){this._popup.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popup.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}},{key:"setEventListeners",value:function(){var e=this;this._popup.addEventListener("click",(function(t){(t.target.classList.contains("popup__overlay")||t.target.classList.contains("close-button"))&&e.close()}))}}])&&c(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function s(e){return s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},s(e)}function l(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function f(){return f="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=p(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},f.apply(this,arguments)}function p(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=_(e)););return e}function h(e,t){return h=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},h(e,t)}function y(e,t){if(t&&("object"===s(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function _(e){return _=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},_(e)}var d=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&h(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=_(r);if(o){var n=_(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return y(this,e)});function u(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(t=i.call(this,e))._image=t._popup.querySelector(".popup-picture__image"),t._description=t._popup.querySelector(".popup-picture__description"),t}return t=u,(n=[{key:"open",value:function(e,t){this._image.src=t,this._image.alt=e,this._description.textContent=e,f(_(u.prototype),"open",this).call(this)}}])&&l(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),u}(a);function b(e){return b="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},b(e)}function m(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function v(){return v="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=g(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},v.apply(this,arguments)}function g(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=S(e)););return e}function k(e,t){return k=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},k(e,t)}function w(e,t){if(t&&("object"===b(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function S(e){return S=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},S(e)}var O=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&k(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=S(r);if(o){var n=S(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return w(this,e)});function u(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(n=i.call(this,e))._handleFormSubmit=t,n._submitButtonSelector=n._popup.querySelector(".submit-button"),n._inputList=Array.from(n._popup.querySelectorAll(".popup__input")),n._form=n._popup.querySelector(".popup__form"),n}return t=u,(n=[{key:"_getInputValues",value:function(){var e=this;return this._formValues={},this._inputList.forEach((function(t){e._formValues[t.name]=t.value})),this._formValues}},{key:"setEventListeners",value:function(){var e=this;v(S(u.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(t){t.preventDefault(),e._handleFormSubmit(e._getInputValues())}))}},{key:"close",value:function(){v(S(u.prototype),"close",this).call(this),this._form.reset()}}])&&m(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),u}(a);function E(e){return E="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},E(e)}function j(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function P(){return P="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=C(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},P.apply(this,arguments)}function C(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=B(e)););return e}function L(e,t){return L=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},L(e,t)}function I(e,t){if(t&&("object"===E(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function B(e){return B=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},B(e)}var q=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&L(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=B(r);if(o){var n=B(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return I(this,e)});function u(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(n=i.call(this,e))._handleFormSubmit=t,n._submitButtonSelector=n._popup.querySelector(".submit-button"),n._form=n._popup.querySelector(".popup__form"),n}return t=u,(n=[{key:"setEventListeners",value:function(){var e=this;P(B(u.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(t){t.preventDefault(),e._handleFormSubmit()}))}}])&&j(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),u}(a);function R(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var T=function(){function e(t){var n=t.name,r=t.about,o=t.avatar,i=t.id;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=n,this._about=r,this._avatar=o,this._id=i}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return this._dataObject={name:this._name,about:this._about,avatar:this._avatar,id:this._id},this._dataObject}},{key:"setUserInfo",value:function(e){this._name=e.name,this._about=e.about}},{key:"getId",value:function(){return this._id}}])&&R(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}(),x=document.querySelector(".edit-button"),V=document.querySelector(".add-button"),D=document.querySelector(".form-edit"),U=document.querySelector(".form-add"),A=document.querySelector(".field_type_name"),N=document.querySelector(".field_type_description"),z={name:document.querySelector(".profile__title").textContent,about:document.querySelector(".profile__subtitle").textContent},F=document.querySelector(".elements"),H={formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__button",inactiveButtonClass:"popup__button_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_visible"};function J(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var M=function(){function e(t){var n=t.address,r=t.token;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._address=n,this._token=r}var t,n;return t=e,(n=[{key:"getCards",value:function(){return fetch("".concat(this._address,"/cards"),{headers:{authorization:this._token}}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка ".concat(e.status))}))}},{key:"sendCard",value:function(e){return fetch("".concat(this._address,"/cards"),{method:"POST",headers:{authorization:this._token,"Content-Type":"application/json"},body:JSON.stringify({name:e.name,link:e.link})}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка ".concat(e.status))}))}},{key:"getProfileInfo",value:function(){return fetch("".concat(this._address,"//users/me"),{headers:{authorization:this._token}}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка ".concat(e.status))}))}},{key:"sendProfileInfo",value:function(e){return fetch("".concat(this._address,"/users/me"),{method:"PATCH",headers:{authorization:this._token,"Content-Type":"application/json"},body:JSON.stringify({name:e.name,about:e.about})}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка ".concat(e.status))}))}}])&&J(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}(),G=new o(H,D),K=new o(H,U);G.enableValidation(),K.enableValidation();var Q=new d(".popup-picture");Q.setEventListeners();var W=new O(".popup-edit",(function(e){Z.setUserInfo(e),ee.sendProfileInfo(Z.getUserInfo()).then((function(){W.close()})).catch((function(e){console.log("Ошибка при редактировании профиля".concat(e))})).finally((function(){G.disableSubmitButton()}))}));W.setEventListeners();var X=new O(".popup-add",(function(e){ee.sendCard(e).then((function(e){var t=re(e);$.prependItem(t),X.close()})).catch((function(e){console.log("Ошибка при добавлении карточки".concat(e))}))}));X.setEventListeners();var Y=new q(".popup-delete",(function(){Y.close()}));Y.setEventListeners();var Z=new T(z),$=new u({renderer:function(e){var t=re(e,e.likes.length);$.addItem(t)}},F),ee=new M({address:"https://mesto.nomoreparties.co/v1/cohort-35",token:"b6ff83c2-3ced-4557-872e-eefa9152b997"});function te(e,t){Q.open(e,t)}function ne(){Y.open()}function re(e,n){return new t(e,".element-template",te,ne,n,Z.getId()).generateCard()}ee.getCards().then((function(e){$.renderItems(e)})).catch((function(e){console.log((function(e){console.log(e)}))})),ee.getProfileInfo().then((function(e){var t=new T(e).getUserInfo();document.querySelector(".profile__title").textContent=t.name,document.querySelector(".profile__avatar").alt=t.name,document.querySelector(".profile__avatar").src=t.avatar,document.querySelector(".profile__subtitle").textContent=t.about})).catch((function(e){console.log((function(e){console.log(e)}))})),V.addEventListener("click",(function(){X.open(),K.disableSubmitButton()})),x.addEventListener("click",(function(){var e;e=Z.getUserInfo(),A.value=e.name,N.value=e.about,W.open()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QVN0SCxHQUNKa0ssY0FDdEI5SSxTQUFTQyxjQUFjLG1CQUFtQlUsWUFBY3VKLEVBQVM5SyxLQUNqRVksU0FBU0MsY0FBYyxvQkFBb0JZLElBQU1xSixFQUFTOUssS0FDMURZLFNBQVNDLGNBQWMsb0JBQW9CVyxJQUFNc0osRUFBUzlELE9BQzFEcEcsU0FBU0MsY0FBYyxzQkFBc0JVLFlBQWN1SixFQUFTL0QsU0FFckU0QyxPQUFNLFNBQUFDLEdBQ0xsSixRQUFRQyxLQUFJLFNBQUFpSixHQUNWbEosUUFBUUMsSUFBSWlKLFNBMEJoQnZDLEVBQVUzRixpQkFBaUIsU0FBUyxXQTNEbENvSSxFQUFTUyxPQUNUdEIsRUFBa0I5Rix5QkE2RHBCaUUsRUFBVzFGLGlCQUFpQixTQUFTLFdBekJyQyxJQUNRb0osRUFBQUEsRUFBV3hCLEVBQUtJLGNBQ3RCbEMsRUFBVWQsTUFBUW9FLEVBQVM5SyxLQUMzQnlILEVBQVNmLE1BQVFvRSxFQUFTL0QsTUFDMUJzQyxFQUFVa0IsVyIsInNvdXJjZXMiOlsid2VicGFjazovL3lhbmRleC5tZXN0by8uL3NyYy9jb21wb25lbnRzL0NhcmQuanMiLCJ3ZWJwYWNrOi8veWFuZGV4Lm1lc3RvLy4vc3JjL2NvbXBvbmVudHMvRm9ybVZhbGlkYXRvci5qcyIsIndlYnBhY2s6Ly95YW5kZXgubWVzdG8vLi9zcmMvY29tcG9uZW50cy9TZWN0aW9uLmpzIiwid2VicGFjazovL3lhbmRleC5tZXN0by8uL3NyYy9jb21wb25lbnRzL1BvcHVwLmpzIiwid2VicGFjazovL3lhbmRleC5tZXN0by8uL3NyYy9jb21wb25lbnRzL1BvcHVwV2l0aEltYWdlLmpzIiwid2VicGFjazovL3lhbmRleC5tZXN0by8uL3NyYy9jb21wb25lbnRzL1BvcHVwV2l0aEZvcm0uanMiLCJ3ZWJwYWNrOi8veWFuZGV4Lm1lc3RvLy4vc3JjL2NvbXBvbmVudHMvUG9wdXBXaXRoQ29uZmlybS5qcyIsIndlYnBhY2s6Ly95YW5kZXgubWVzdG8vLi9zcmMvY29tcG9uZW50cy9Vc2VySW5mby5qcyIsIndlYnBhY2s6Ly95YW5kZXgubWVzdG8vLi9zcmMvdXRpbHMvY29uc3RhbnRzLmpzIiwid2VicGFjazovL3lhbmRleC5tZXN0by8uL3NyYy9jb21wb25lbnRzL0FwaS5qcyIsIndlYnBhY2s6Ly95YW5kZXgubWVzdG8vLi9zcmMvcGFnZXMvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ2FyZCB7XHJcbiAgY29uc3RydWN0b3IoZGF0YSwgdGVtcGxhdGVTZWxlY3RvciwgaGFuZGxlQ2FyZENsaWNrLCBoYW5kbGVPcGVuUG9wdXAsIGxpa2VOdW1iZXIsIHVzZXJJZCkge1xyXG4gICAgdGhpcy5fbmFtZSA9IGRhdGEubmFtZTtcclxuICAgIHRoaXMuX2xpbmsgPSBkYXRhLmxpbms7XHJcbiAgICB0aGlzLl9pZCA9IGRhdGEub3duZXIuX2lkO1xyXG4gICAgdGhpcy5fdXNlcklkID0gdXNlcklkO1xyXG4gICAgdGhpcy5fdGVtcGxhdGVTZWxlY3RvciA9IHRlbXBsYXRlU2VsZWN0b3I7XHJcbiAgICB0aGlzLl9oYW5kbGVDYXJkQ2xpY2sgPSBoYW5kbGVDYXJkQ2xpY2s7XHJcbiAgICB0aGlzLl9oYW5kbGVPcGVuUG9wdXAgPSBoYW5kbGVPcGVuUG9wdXA7XHJcbiAgICB0aGlzLl9saWtlTnVtYmVyID0gbGlrZU51bWJlcjtcclxuICB9XHJcblxyXG4gIF9nZXRUZW1wbGF0ZSgpIHtcclxuICAgIGNvbnNvbGUubG9nKHRoaXMuX3RlbXBsYXRlU2VsZWN0b3IpO1xyXG4gICAgY29uc3QgY2FyZEVsZW1lbnQgPSBkb2N1bWVudFxyXG4gICAgICAucXVlcnlTZWxlY3Rvcih0aGlzLl90ZW1wbGF0ZVNlbGVjdG9yKVxyXG4gICAgICAuY29udGVudFxyXG4gICAgICAucXVlcnlTZWxlY3RvcignLmVsZW1lbnQnKVxyXG4gICAgICAuY2xvbmVOb2RlKHRydWUpO1xyXG5cclxuICAgIHJldHVybiBjYXJkRWxlbWVudDtcclxuICB9XHJcblxyXG4gIGdlbmVyYXRlQ2FyZCgpIHtcclxuICAgIHRoaXMuX2VsZW1lbnQgPSB0aGlzLl9nZXRUZW1wbGF0ZSgpO1xyXG4gICAgdGhpcy5fY2FyZEltYWdlID0gdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuZWxlbWVudF9fcGhvdG8nKTtcclxuICAgIHRoaXMuX2NhcmRMaWtlID0gdGhpcy5fZWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuZWxlbWVudF9fbGlrZScpO1xyXG4gICAgdGhpcy5fY2FyZEJhc2tldCA9IHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcignLmVsZW1lbnRfX2Jhc2tldCcpO1xyXG4gICAgdGhpcy5fc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuICAgIHRoaXMuX3JlbW92ZUNhcmRCYXNrZXQoKTtcclxuXHJcbiAgICB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy5lbGVtZW50X190aXRsZScpLnRleHRDb250ZW50ID0gdGhpcy5fbmFtZTtcclxuICAgIHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcignLmVsZW1lbnRfX2xpa2VfX2NvdW50ZXInKS50ZXh0Q29udGVudCA9IHRoaXMuX2xpa2VOdW1iZXI7XHJcbiAgICB0aGlzLl9jYXJkSW1hZ2Uuc3JjID0gdGhpcy5fbGluaztcclxuICAgIHRoaXMuX2NhcmRJbWFnZS5hbHQgPSB0aGlzLl9uYW1lO1xyXG5cclxuICAgIHJldHVybiB0aGlzLl9lbGVtZW50O1xyXG4gIH1cclxuXHJcbiAgX3NldEV2ZW50TGlzdGVuZXJzKCkge1xyXG4gICAgdGhpcy5fY2FyZExpa2UuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XHJcbiAgICAgIHRoaXMuX2hhbmRsZUxpa2UoKTtcclxuICAgIH0pO1xyXG5cclxuICAgIHRoaXMuX2VsZW1lbnQucXVlcnlTZWxlY3RvcignLmVsZW1lbnRfX2Jhc2tldCcpLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xyXG4gICAgICB0aGlzLl9oYW5kbGVPcGVuUG9wdXAoKTtcclxuICAgIH0pO1xyXG5cclxuICAgIHRoaXMuX2NhcmRJbWFnZS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcclxuICAgICAgdGhpcy5faGFuZGxlQ2FyZENsaWNrKHRoaXMuX25hbWUsIHRoaXMuX2xpbmspO1xyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICBfaGFuZGxlTGlrZSgpIHtcclxuICAgIHRoaXMuX2NhcmRMaWtlLmNsYXNzTGlzdC50b2dnbGUoJ2VsZW1lbnRfX2xpa2VfYWN0aXZlJyk7XHJcbiAgfVxyXG5cclxuICBfcmVtb3ZlQ2FyZEJhc2tldCgpIHtcclxuICAgIGlmKHRoaXMuX2VsZW1lbnQub3duZXIuX2lkICE9PSB0aGlzLl91c2VySWQpIHtcclxuICAgICAgdGhpcy5fY2FyZEJhc2tldC5yZW1vdmUoKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIGdldFZpZXcoKSB7XHJcbiAgICByZXR1cm4gdGhpcy5fZWxlbWVudDtcclxuICB9XHJcbn1cclxuIiwiY2xhc3MgRm9ybVZhbGlkYXRvciB7XHJcbiAgY29uc3RydWN0b3IoZGF0YSwgZm9ybSkge1xyXG4gICAgdGhpcy5fZm9ybSA9IGZvcm07XHJcbiAgICB0aGlzLl9mb3JtU2VsZWN0b3IgPSBkYXRhLmZvcm1TZWxlY3RvcjtcclxuICAgIHRoaXMuX2lucHV0U2VsZWN0b3IgPSBkYXRhLmlucHV0U2VsZWN0b3I7XHJcbiAgICB0aGlzLl9zdWJtaXRCdXR0b25TZWxlY3RvciA9IGRhdGEuc3VibWl0QnV0dG9uU2VsZWN0b3I7XHJcbiAgICB0aGlzLl9pbmFjdGl2ZUJ1dHRvbkNsYXNzID0gZGF0YS5pbmFjdGl2ZUJ1dHRvbkNsYXNzO1xyXG4gICAgdGhpcy5faW5wdXRFcnJvckNsYXNzID0gZGF0YS5pbnB1dEVycm9yQ2xhc3M7XHJcbiAgICB0aGlzLl9lcnJvckNsYXNzID0gZGF0YS5lcnJvckNsYXNzO1xyXG4gIH1cclxuXHJcbiAgcmVzZXRWYWxpZGF0aW9uKCkge1xyXG4gICAgdGhpcy5fdG9nZ2xlQnV0dG9uRXJyb3IodGhpcy5fc3VibWl0QnV0dG9uKTtcclxuICAgIHRoaXMuX2lucHV0cy5mb3JFYWNoKChpbnB1dEVsZW1lbnQpID0+IHtcclxuICAgICAgdGhpcy5faGlkZUlucHV0RXJyb3IoaW5wdXRFbGVtZW50KTtcclxuICAgIH0pO1xyXG4gIH1cclxuXHJcbiAgZGlzYWJsZVN1Ym1pdEJ1dHRvbigpIHtcclxuICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbi5jbGFzc0xpc3QuYWRkKHRoaXMuX2luYWN0aXZlQnV0dG9uQ2xhc3MpO1xyXG4gICAgdGhpcy5fc3VibWl0QnV0dG9uLmRpc2FibGVkID0gdHJ1ZTtcclxuICB9XHJcblxyXG4gIGVuYWJsZVN1Ym1pdEJ1dHRvbigpIHtcclxuICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbi5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX2luYWN0aXZlQnV0dG9uQ2xhc3MpO1xyXG4gICAgdGhpcy5fc3VibWl0QnV0dG9uLmRpc2FibGVkID0gZmFsc2U7XHJcbiAgfVxyXG5cclxuICBfc2hvd0lucHV0RXJyb3IgPSAoaW5wdXQpID0+IHtcclxuICAgIGNvbnN0IGVycm9yTWVzc2FnZSA9IHRoaXMuX2Zvcm0ucXVlcnlTZWxlY3RvcihgIyR7aW5wdXQuaWR9LWVycm9yYCk7XHJcbiAgICBlcnJvck1lc3NhZ2UudGV4dENvbnRlbnQgPSBpbnB1dC52YWxpZGF0aW9uTWVzc2FnZTtcclxuICAgIGVycm9yTWVzc2FnZS5jbGFzc0xpc3QuYWRkKHRoaXMuX2Vycm9yQ2xhc3MpO1xyXG4gICAgaW5wdXQuY2xhc3NMaXN0LmFkZCh0aGlzLl9pbnB1dEVycm9yQ2xhc3MpO1xyXG4gIH1cclxuXHJcbiAgX2hpZGVJbnB1dEVycm9yID0gKGlucHV0KSA9PiB7XHJcbiAgICBjb25zdCBlcnJvck1lc3NhZ2UgPSB0aGlzLl9mb3JtLnF1ZXJ5U2VsZWN0b3IoYCMke2lucHV0LmlkfS1lcnJvcmApO1xyXG4gICAgZXJyb3JNZXNzYWdlLnRleHRDb250ZW50ID0gJyAnO1xyXG4gICAgZXJyb3JNZXNzYWdlLmNsYXNzTGlzdC5yZW1vdmUodGhpcy5fZXJyb3JDbGFzcyk7XHJcbiAgICBpbnB1dC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX2lucHV0RXJyb3JDbGFzcyk7XHJcbiAgfVxyXG5cclxuICBfaGFzSW52YWxpZElucHV0ID0gKGlucHV0cykgPT4ge1xyXG4gICAgcmV0dXJuIEFycmF5LmZyb20oaW5wdXRzKS5zb21lKChlbGVtZW50KSA9PiAhZWxlbWVudC52YWxpZGl0eS52YWxpZCk7XHJcbiAgfVxyXG5cclxuICBfdG9nZ2xlQnV0dG9uRXJyb3IgPSAoYnV0dG9uKSA9PiB7XHJcbiAgICBpZiAodGhpcy5faGFzSW52YWxpZElucHV0KHRoaXMuX2lucHV0cykpIHtcclxuICAgICAgdGhpcy5kaXNhYmxlU3VibWl0QnV0dG9uKCk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aGlzLmVuYWJsZVN1Ym1pdEJ1dHRvbigpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgX2NoZWNrSWZJbnB1dFZhbGlkKGlucHV0KSB7XHJcbiAgICBpZiAoaW5wdXQudmFsaWRpdHkudmFsaWQpIHtcclxuICAgICAgdGhpcy5faGlkZUlucHV0RXJyb3IoaW5wdXQpO1xyXG4gICAgfVxyXG4gICAgZWxzZSB7XHJcbiAgICAgIHRoaXMuX3Nob3dJbnB1dEVycm9yKGlucHV0KTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIF9zZXRJbnB1dExpc3RlbmVycyA9ICgpID0+IHtcclxuICAgIHRoaXMuX2lucHV0cyA9IHRoaXMuX2Zvcm0ucXVlcnlTZWxlY3RvckFsbCh0aGlzLl9pbnB1dFNlbGVjdG9yKTtcclxuICAgIHRoaXMuX3N1Ym1pdEJ1dHRvbiA9IHRoaXMuX2Zvcm0ucXVlcnlTZWxlY3Rvcih0aGlzLl9zdWJtaXRCdXR0b25TZWxlY3Rvcik7XHJcblxyXG4gICAgdGhpcy5faW5wdXRzLmZvckVhY2goKGlucHV0KSA9PiB7XHJcbiAgICAgIGlucHV0LmFkZEV2ZW50TGlzdGVuZXIoJ2lucHV0JywgKCkgPT4ge1xyXG4gICAgICAgIHRoaXMuX2NoZWNrSWZJbnB1dFZhbGlkKGlucHV0KTtcclxuICAgICAgICB0aGlzLl90b2dnbGVCdXR0b25FcnJvcih0aGlzLl9zdWJtaXRCdXR0b24pO1xyXG4gICAgICB9KTtcclxuICAgIH0pO1xyXG4gIH07XHJcblxyXG4gIGVuYWJsZVZhbGlkYXRpb24gPSAoKSA9PiB7XHJcbiAgICB0aGlzLl9mb3JtLmFkZEV2ZW50TGlzdGVuZXIoJ3N1Ym1pdCcsIChldmVudCkgPT4ge1xyXG4gICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgfSk7XHJcbiAgICB0aGlzLl9zZXRJbnB1dExpc3RlbmVycygpO1xyXG4gIH07XHJcblxyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBGb3JtVmFsaWRhdG9yO1xyXG5cclxuXHJcblxyXG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBTZWN0aW9uIHtcclxuICBjb25zdHJ1Y3Rvcih7cmVuZGVyZXJ9LCBjb250YWluZXJTZWxlY3Rvcikge1xyXG4gICAgdGhpcy5fcmVuZGVyZXIgPSByZW5kZXJlcjtcclxuICAgIHRoaXMuX2NvbnRhaW5lciA9IGNvbnRhaW5lclNlbGVjdG9yO1xyXG4gIH1cclxuXHJcbiAgYWRkSXRlbShlbGVtZW50KSB7XHJcbiAgICB0aGlzLl9jb250YWluZXIuYXBwZW5kKGVsZW1lbnQpO1xyXG4gIH1cclxuXHJcbiAgY2xlYXIoKSB7XHJcbiAgICB0aGlzLl9jb250YWluZXIuaW5uZXJIVE1MID0gJyc7XHJcbiAgfVxyXG5cclxuICByZW5kZXJJdGVtcyhpdGVtcykge1xyXG4gICAgdGhpcy5jbGVhcigpO1xyXG5cclxuICAgIGl0ZW1zLmZvckVhY2goaXRlbSA9PiB7XHJcbiAgICAgIHRoaXMuX3JlbmRlcmVyKGl0ZW0pO1xyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICBwcmVwZW5kSXRlbShjYXJkKSB7XHJcbiAgICB0aGlzLl9jb250YWluZXIucHJlcGVuZChjYXJkKTtcclxuICB9XHJcblxyXG59IiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXAge1xyXG4gIGNvbnN0cnVjdG9yKHBvcHVwU2VsZWN0b3IpIHtcclxuICAgIHRoaXMuX3BvcHVwID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcihwb3B1cFNlbGVjdG9yKTtcclxuICAgIHRoaXMuX2hhbmRsZUVzY0Nsb3NlID0gdGhpcy5faGFuZGxlRXNjQ2xvc2UuYmluZCh0aGlzKTsgLy/Qv9GA0LjQstGP0LfRi9Cy0LDRjiDQuiDQutC+0L3QutGA0LXRgtC90L7QvNGDINC/0L7Qv9Cw0L/Rg1xyXG4gICAgdGhpcy5jbG9zZSA9IHRoaXMuY2xvc2UuYmluZCh0aGlzKTtcclxuICB9XHJcblxyXG4gIG9wZW4oKSB7XHJcbiAgICB0aGlzLl9wb3B1cC5jbGFzc0xpc3QuYWRkKCdwb3B1cF9vcGVuZWQnKTtcclxuICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCB0aGlzLl9oYW5kbGVFc2NDbG9zZSk7XHJcbiAgfVxyXG5cclxuICBjbG9zZSgpIHtcclxuICAgIHRoaXMuX3BvcHVwLmNsYXNzTGlzdC5yZW1vdmUoJ3BvcHVwX29wZW5lZCcpO1xyXG4gICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIHRoaXMuX2hhbmRsZUVzY0Nsb3NlKTtcclxuICB9XHJcblxyXG4gIF9oYW5kbGVFc2NDbG9zZShldnQpIHtcclxuICAgIGlmIChldnQua2V5ID09PSAnRXNjYXBlJykge1xyXG4gICAgICB0aGlzLmNsb3NlKCk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBzZXRFdmVudExpc3RlbmVycygpIHtcclxuICAgIHRoaXMuX3BvcHVwLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKGV2dCkgPT4ge1xyXG4gICAgICBpZiAoZXZ0LnRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoJ3BvcHVwX19vdmVybGF5JykgfHwgZXZ0LnRhcmdldC5jbGFzc0xpc3QuY29udGFpbnMoJ2Nsb3NlLWJ1dHRvbicpKSB7XHJcbiAgICAgICAgdGhpcy5jbG9zZSgpO1xyXG4gICAgICB9XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG59IiwiaW1wb3J0IFBvcHVwIGZyb20gXCIuL1BvcHVwLmpzXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cFdpdGhJbWFnZSBleHRlbmRzIFBvcHVwIHtcclxuICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yKSB7XHJcbiAgICBzdXBlcihwb3B1cFNlbGVjdG9yKTtcclxuICAgIHRoaXMuX2ltYWdlID0gdGhpcy5fcG9wdXAucXVlcnlTZWxlY3RvcignLnBvcHVwLXBpY3R1cmVfX2ltYWdlJyk7XHJcbiAgICB0aGlzLl9kZXNjcmlwdGlvbiA9IHRoaXMuX3BvcHVwLnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cC1waWN0dXJlX19kZXNjcmlwdGlvbicpO1xyXG4gIH1cclxuICBvcGVuKG5hbWUsIGxpbmspIHtcclxuICAgIHRoaXMuX2ltYWdlLnNyYyA9IGxpbms7XHJcbiAgICB0aGlzLl9pbWFnZS5hbHQgPSBuYW1lO1xyXG4gICAgdGhpcy5fZGVzY3JpcHRpb24udGV4dENvbnRlbnQgPSBuYW1lO1xyXG4gICAgc3VwZXIub3BlbigpO1xyXG4gIH1cclxufSIsImltcG9ydCBQb3B1cCBmcm9tIFwiLi9Qb3B1cC5qc1wiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXBXaXRoRm9ybSBleHRlbmRzIFBvcHVwIHtcclxuICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yLCBoYW5kbGVGb3JtU3VibWl0KSB7XHJcbiAgICBzdXBlcihwb3B1cFNlbGVjdG9yKTtcclxuICAgIHRoaXMuX2hhbmRsZUZvcm1TdWJtaXQgPSBoYW5kbGVGb3JtU3VibWl0O1xyXG4gICAgdGhpcy5fc3VibWl0QnV0dG9uU2VsZWN0b3IgPSB0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yKCcuc3VibWl0LWJ1dHRvbicpO1xyXG4gICAgdGhpcy5faW5wdXRMaXN0ID0gQXJyYXkuZnJvbSh0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yQWxsKCcucG9wdXBfX2lucHV0JykpO1xyXG4gICAgdGhpcy5fZm9ybSA9IHRoaXMuX3BvcHVwLnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9fZm9ybScpO1xyXG4gIH1cclxuICBfZ2V0SW5wdXRWYWx1ZXMoKSB7XHJcbiAgICB0aGlzLl9mb3JtVmFsdWVzID0ge307XHJcbiAgICB0aGlzLl9pbnB1dExpc3QuZm9yRWFjaChpbnB1dCA9PiB7XHJcbiAgICAgIHRoaXMuX2Zvcm1WYWx1ZXNbaW5wdXQubmFtZV0gPSBpbnB1dC52YWx1ZTtcclxuICAgIH0pO1xyXG4gICAgcmV0dXJuIHRoaXMuX2Zvcm1WYWx1ZXM7XHJcbiAgfVxyXG5cclxuICBzZXRFdmVudExpc3RlbmVycygpIHtcclxuICAgIHN1cGVyLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcbiAgICB0aGlzLl9mb3JtLmFkZEV2ZW50TGlzdGVuZXIoJ3N1Ym1pdCcsIChldnQpID0+IHtcclxuICAgICAgZXZ0LnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgIHRoaXMuX2hhbmRsZUZvcm1TdWJtaXQodGhpcy5fZ2V0SW5wdXRWYWx1ZXMoKSk7XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIGNsb3NlKCkge1xyXG4gICAgc3VwZXIuY2xvc2UoKTtcclxuICAgIHRoaXMuX2Zvcm0ucmVzZXQoKTtcclxuICB9XHJcbn1cclxuIiwiaW1wb3J0IFBvcHVwIGZyb20gXCIuL1BvcHVwLmpzXCI7XHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwV2l0aENvbmZpcm0gZXh0ZW5kcyBQb3B1cCB7XHJcbiAgY29uc3RydWN0b3IocG9wdXBTZWxlY3RvciwgaGFuZGxlRm9ybVN1Ym1pdCkge1xyXG4gICAgc3VwZXIocG9wdXBTZWxlY3Rvcik7XHJcbiAgICB0aGlzLl9oYW5kbGVGb3JtU3VibWl0ID0gaGFuZGxlRm9ybVN1Ym1pdDtcclxuICAgIHRoaXMuX3N1Ym1pdEJ1dHRvblNlbGVjdG9yID0gdGhpcy5fcG9wdXAucXVlcnlTZWxlY3RvcignLnN1Ym1pdC1idXR0b24nKTtcclxuICAgIHRoaXMuX2Zvcm0gPSB0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX2Zvcm0nKTtcclxuICB9XHJcblxyXG4gIHNldEV2ZW50TGlzdGVuZXJzKCkge1xyXG4gICAgc3VwZXIuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuICAgIHRoaXMuX2Zvcm0uYWRkRXZlbnRMaXN0ZW5lcignc3VibWl0JywgKGV2dCkgPT4ge1xyXG4gICAgICBldnQucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgdGhpcy5faGFuZGxlRm9ybVN1Ym1pdCgpO1xyXG4gICAgfSk7XHJcbiAgfVxyXG59IiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgVXNlckluZm8ge1xyXG4gIGNvbnN0cnVjdG9yKHtuYW1lLCBhYm91dCwgYXZhdGFyLCBpZH0pIHtcclxuICAgIHRoaXMuX25hbWUgPSBuYW1lO1xyXG4gICAgdGhpcy5fYWJvdXQgPSBhYm91dDtcclxuICAgIHRoaXMuX2F2YXRhciA9IGF2YXRhcjtcclxuICAgIHRoaXMuX2lkID0gaWQ7XHJcbiAgfVxyXG5cclxuICBnZXRVc2VySW5mbygpIHtcclxuICAgIHRoaXMuX2RhdGFPYmplY3QgPSB7XHJcbiAgICAgIG5hbWU6IHRoaXMuX25hbWUsXHJcbiAgICAgIGFib3V0OiB0aGlzLl9hYm91dCxcclxuICAgICAgYXZhdGFyOiB0aGlzLl9hdmF0YXIsXHJcbiAgICAgIGlkOiB0aGlzLl9pZFxyXG4gICAgfVxyXG4gICAgcmV0dXJuIHRoaXMuX2RhdGFPYmplY3Q7XHJcbiAgfVxyXG5cclxuICBzZXRVc2VySW5mbyhkYXRhKSB7XHJcbiAgICB0aGlzLl9uYW1lID0gZGF0YS5uYW1lO1xyXG4gICAgdGhpcy5fYWJvdXQgPSBkYXRhLmFib3V0O1xyXG4gIH1cclxuXHJcbiAgZ2V0SWQoKSB7XHJcbiAgICByZXR1cm4gdGhpcy5faWQ7XHJcbiAgfVxyXG59XHJcbiIsImV4cG9ydCBjb25zdCBlZGl0QnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmVkaXQtYnV0dG9uJyk7XHJcbmV4cG9ydCBjb25zdCBhZGRCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuYWRkLWJ1dHRvbicpO1xyXG5leHBvcnQgY29uc3QgZm9ybUVkaXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuZm9ybS1lZGl0Jyk7XHJcbmV4cG9ydCBjb25zdCBmb3JtQWRkID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmZvcm0tYWRkJyk7XHJcbmV4cG9ydCBjb25zdCBuYW1lSW5wdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuZmllbGRfdHlwZV9uYW1lJyk7XHJcbmV4cG9ydCBjb25zdCBqb2JJbnB1dCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5maWVsZF90eXBlX2Rlc2NyaXB0aW9uJyk7XHJcblxyXG5leHBvcnQgY29uc3QgdXNlckRlc2NyaXB0aW9uID0ge1xyXG4gIG5hbWU6IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wcm9maWxlX190aXRsZScpLnRleHRDb250ZW50LFxyXG4gIGFib3V0OiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucHJvZmlsZV9fc3VidGl0bGUnKS50ZXh0Q29udGVudFxyXG59O1xyXG5cclxuZXhwb3J0IGNvbnN0IGVsZW1lbnRzQ29udGFpbmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmVsZW1lbnRzJyk7XHJcblxyXG5leHBvcnQgY29uc3QgdmFsaWRhdGlvbkNvbmZpZyA9IHtcclxuICBmb3JtU2VsZWN0b3I6ICcucG9wdXBfX2Zvcm0nLFxyXG4gIGlucHV0U2VsZWN0b3I6ICcucG9wdXBfX2lucHV0JyxcclxuICBzdWJtaXRCdXR0b25TZWxlY3RvcjogJy5wb3B1cF9fYnV0dG9uJyxcclxuICBpbmFjdGl2ZUJ1dHRvbkNsYXNzOiAncG9wdXBfX2J1dHRvbl9kaXNhYmxlZCcsXHJcbiAgaW5wdXRFcnJvckNsYXNzOiAncG9wdXBfX2lucHV0X3R5cGVfZXJyb3InLFxyXG4gIGVycm9yQ2xhc3M6ICdwb3B1cF9fZXJyb3JfdmlzaWJsZSdcclxufTsiLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBBcGkge1xyXG4gIGNvbnN0cnVjdG9yICh7YWRkcmVzcywgdG9rZW59KSB7XHJcbiAgICB0aGlzLl9hZGRyZXNzID0gYWRkcmVzcztcclxuICAgIHRoaXMuX3Rva2VuID0gdG9rZW47XHJcbiAgfVxyXG5cclxuICBnZXRDYXJkcygpIHtcclxuICAgIHJldHVybiBmZXRjaCAoYCR7dGhpcy5fYWRkcmVzc30vY2FyZHNgLCB7XHJcbiAgICAgIGhlYWRlcnM6IHtcclxuICAgICAgICBhdXRob3JpemF0aW9uOiB0aGlzLl90b2tlblxyXG4gICAgICB9XHJcbiAgICB9KVxyXG4gICAgLnRoZW4ocmVzID0+IHtcclxuICAgICAgaWYgKHJlcy5vaykge1xyXG4gICAgICAgIHJldHVybiByZXMuanNvbigpXHJcbiAgICAgIH1cclxuICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGDQntGI0LjQsdC60LAgJHtyZXMuc3RhdHVzfWApXHJcbiAgICB9KVxyXG4gIH1cclxuXHJcbiAgc2VuZENhcmQoZGF0YSkge1xyXG4gICAgcmV0dXJuIGZldGNoIChgJHt0aGlzLl9hZGRyZXNzfS9jYXJkc2AsIHtcclxuICAgICAgbWV0aG9kOiAnUE9TVCcsXHJcbiAgICAgIGhlYWRlcnM6IHtcclxuICAgICAgICBhdXRob3JpemF0aW9uOiB0aGlzLl90b2tlbixcclxuICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nXHJcbiAgICAgIH0sXHJcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcclxuICAgICAgICBuYW1lOiBkYXRhLm5hbWUsXHJcbiAgICAgICAgbGluazogZGF0YS5saW5rXHJcbiAgICAgIH0pXHJcbiAgICB9KVxyXG4gICAgLnRoZW4ocmVzID0+IHtcclxuICAgICAgaWYgKHJlcy5vaykge1xyXG4gICAgICAgIHJldHVybiByZXMuanNvbigpXHJcbiAgICAgIH1cclxuICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGDQntGI0LjQsdC60LAgJHtyZXMuc3RhdHVzfWApXHJcbiAgICB9KVxyXG4gIH1cclxuXHJcbiAgZ2V0UHJvZmlsZUluZm8oKSB7XHJcbiAgICByZXR1cm4gZmV0Y2ggKGAke3RoaXMuX2FkZHJlc3N9Ly91c2Vycy9tZWAsIHtcclxuICAgICAgaGVhZGVyczoge1xyXG4gICAgICAgIGF1dGhvcml6YXRpb246IHRoaXMuX3Rva2VuXHJcbiAgICAgIH1cclxuICAgIH0pXHJcbiAgICAudGhlbihyZXMgPT4ge1xyXG4gICAgICBpZiAocmVzLm9rKSB7XHJcbiAgICAgICAgcmV0dXJuIHJlcy5qc29uKClcclxuICAgICAgfVxyXG4gICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoYNCe0YjQuNCx0LrQsCAke3Jlcy5zdGF0dXN9YClcclxuICAgIH0pXHJcbiAgfVxyXG5cclxuICBzZW5kUHJvZmlsZUluZm8oZGF0YSkge1xyXG4gICAgcmV0dXJuIGZldGNoIChgJHt0aGlzLl9hZGRyZXNzfS91c2Vycy9tZWAsIHtcclxuICAgICAgbWV0aG9kOiAnUEFUQ0gnLFxyXG4gICAgICBoZWFkZXJzOiB7XHJcbiAgICAgICAgYXV0aG9yaXphdGlvbjogdGhpcy5fdG9rZW4sXHJcbiAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJ1xyXG4gICAgICB9LFxyXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XHJcbiAgICAgICAgbmFtZTogZGF0YS5uYW1lLFxyXG4gICAgICAgIGFib3V0OiBkYXRhLmFib3V0LFxyXG4gICAgICAgIC8vIGF2YXRhcjogZGF0YS5hdmF0YXJcclxuICAgICAgfSlcclxuICAgIH0pXHJcbiAgICAudGhlbihyZXMgPT4ge1xyXG4gICAgICBpZiAocmVzLm9rKSB7XHJcbiAgICAgICAgcmV0dXJuIHJlcy5qc29uKClcclxuICAgICAgfVxyXG4gICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoYNCe0YjQuNCx0LrQsCAke3Jlcy5zdGF0dXN9YClcclxuICAgIH0pXHJcbiAgfVxyXG5cclxufSIsImltcG9ydCAnLi9pbmRleC5jc3MnO1xyXG5pbXBvcnQgQ2FyZCBmcm9tICcuLi9jb21wb25lbnRzL0NhcmQuanMnO1xyXG5pbXBvcnQgRm9ybVZhbGlkYXRvciBmcm9tICcuLi9jb21wb25lbnRzL0Zvcm1WYWxpZGF0b3IuanMnO1xyXG5pbXBvcnQgU2VjdGlvbiBmcm9tICcuLi9jb21wb25lbnRzL1NlY3Rpb24uanMnO1xyXG5pbXBvcnQgUG9wdXBXaXRoSW1hZ2UgZnJvbSAnLi4vY29tcG9uZW50cy9Qb3B1cFdpdGhJbWFnZS5qcyc7XHJcbmltcG9ydCBQb3B1cFdpdGhGb3JtIGZyb20gJy4uL2NvbXBvbmVudHMvUG9wdXBXaXRoRm9ybS5qcyc7XHJcbmltcG9ydCBQb3B1cFdpdGhDb25maXJtIGZyb20gJy4uL2NvbXBvbmVudHMvUG9wdXBXaXRoQ29uZmlybS5qcyc7XHJcbmltcG9ydCBVc2VySW5mbyBmcm9tICcuLi9jb21wb25lbnRzL1VzZXJJbmZvLmpzJztcclxuaW1wb3J0IHtcclxuICBlZGl0QnV0dG9uLFxyXG4gIGFkZEJ1dHRvbixcclxuICBmb3JtRWRpdCxcclxuICBmb3JtQWRkLFxyXG4gIG5hbWVJbnB1dCxcclxuICBqb2JJbnB1dCxcclxuICB1c2VyRGVzY3JpcHRpb24sXHJcbiAgZWxlbWVudHNDb250YWluZXIsXHJcbiAgLy8gaW5pdGlhbENhcmRzLFxyXG4gIHZhbGlkYXRpb25Db25maWdcclxufSBmcm9tICcuLi91dGlscy9jb25zdGFudHMuanMnO1xyXG5pbXBvcnQgQXBpIGZyb20gJy4uL2NvbXBvbmVudHMvQXBpLmpzJztcclxuXHJcbi8vINCy0LDQu9C40LTQsNGG0LjRjyDRhNC+0YDQvFxyXG5jb25zdCBlZGl0Rm9ybVZhbGlkYXRvciA9IG5ldyBGb3JtVmFsaWRhdG9yKHZhbGlkYXRpb25Db25maWcsIGZvcm1FZGl0KTtcclxuY29uc3QgY2FyZEZvcm1WYWxpZGF0b3IgPSBuZXcgRm9ybVZhbGlkYXRvcih2YWxpZGF0aW9uQ29uZmlnLCBmb3JtQWRkKTtcclxuXHJcbmVkaXRGb3JtVmFsaWRhdG9yLmVuYWJsZVZhbGlkYXRpb24oKTtcclxuY2FyZEZvcm1WYWxpZGF0b3IuZW5hYmxlVmFsaWRhdGlvbigpO1xyXG5cclxuLy/RgdC+0LfQtNCw0L3QuNC1INC/0L7Qv9Cw0L/QsC3QutCw0YDRgtC40L3QutC4XHJcbmNvbnN0IHBvcHVwUGljdHVyZSA9IG5ldyBQb3B1cFdpdGhJbWFnZSgnLnBvcHVwLXBpY3R1cmUnKTtcclxucG9wdXBQaWN0dXJlLnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcblxyXG4vLyDQv9C+0L/QsNC/INCg0JXQlNCQ0JrQotCY0KDQntCS0JDQndCY0JVcclxuY29uc3QgcG9wdXBFZGl0ID0gbmV3IFBvcHVwV2l0aEZvcm0oJy5wb3B1cC1lZGl0Jywgc3VibWl0UG9wdXBFZGl0KTtcclxucG9wdXBFZGl0LnNldEV2ZW50TGlzdGVuZXJzKCk7XHJcblxyXG4vL9C/0L7Qv9Cw0L8g0JTQntCR0JDQktCb0JXQndCY0JVcclxuY29uc3QgcG9wdXBBZGQgPSBuZXcgUG9wdXBXaXRoRm9ybSgnLnBvcHVwLWFkZCcsIHN1Ym1pdFBvcHVwQWRkKTtcclxucG9wdXBBZGQuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcclxuXHJcbi8vINC/0L7Qv9Cw0L8g0KPQlNCQ0JvQldCd0JjQlSBcclxuY29uc3QgcG9wdXBEZWxldGUgPSBuZXcgUG9wdXBXaXRoQ29uZmlybSgnLnBvcHVwLWRlbGV0ZScsIHN1Ym1pdFBvcHVwRGVsZXRlKVxyXG5wb3B1cERlbGV0ZS5zZXRFdmVudExpc3RlbmVycygpO1xyXG5cclxuY29uc3QgdXNlciA9IG5ldyBVc2VySW5mbyh1c2VyRGVzY3JpcHRpb24pO1xyXG5cclxuY29uc3QgY2FyZENvbnRhaW5lciA9IG5ldyBTZWN0aW9uKHtcclxuICByZW5kZXJlcjogKGl0ZW0pID0+IHtcclxuICAgIGNvbnN0IGNhcmQgPSBjcmVhdGVDYXJkKGl0ZW0sIGl0ZW0ubGlrZXMubGVuZ3RoKTtcclxuICAgIGNhcmRDb250YWluZXIuYWRkSXRlbShjYXJkKTtcclxuICB9LFxyXG59LCBlbGVtZW50c0NvbnRhaW5lcik7XHJcblxyXG4vLyBBUElcclxuXHJcbmNvbnN0IGFwaSA9IG5ldyBBcGkoe1xyXG4gIGFkZHJlc3M6ICdodHRwczovL21lc3RvLm5vbW9yZXBhcnRpZXMuY28vdjEvY29ob3J0LTM1JyxcclxuICB0b2tlbjogJ2I2ZmY4M2MyLTNjZWQtNDU1Ny04NzJlLWVlZmE5MTUyYjk5NydcclxufSk7XHJcblxyXG5cclxuLy8g0LrQsNGA0YLQvtGH0LrQuFxyXG5hcGkuZ2V0Q2FyZHMoKVxyXG4udGhlbigoY2FyZHMpID0+IHtcclxuICBjYXJkQ29udGFpbmVyLnJlbmRlckl0ZW1zKGNhcmRzKTtcclxufSlcclxuLmNhdGNoKGVyciA9PiB7XHJcbiAgY29uc29sZS5sb2coZXJyID0+IHtcclxuICAgIGNvbnNvbGUubG9nKGVycik7XHJcbiAgfSlcclxufSkgXHJcblxyXG5mdW5jdGlvbiBoYW5kbGVDYXJkQ2xpY2sobmFtZSwgbGluaykge1xyXG4gIHBvcHVwUGljdHVyZS5vcGVuKG5hbWUsIGxpbmspO1xyXG59XHJcblxyXG5mdW5jdGlvbiBoYW5kbGVPcGVuUG9wdXAoKSB7XHJcbiAgcG9wdXBEZWxldGUub3BlbigpO1xyXG59XHJcblxyXG5mdW5jdGlvbiBjcmVhdGVDYXJkKGRhdGEsIGxpa2VOdW1iZXIpIHtcclxuICBjb25zdCBjYXJkID0gbmV3IENhcmQoZGF0YSwgJy5lbGVtZW50LXRlbXBsYXRlJywgaGFuZGxlQ2FyZENsaWNrLCBoYW5kbGVPcGVuUG9wdXAsIGxpa2VOdW1iZXIsIHVzZXIuZ2V0SWQoKSk7XHJcbiAgY29uc3QgY2FyZEVsZW1lbnQgPSBjYXJkLmdlbmVyYXRlQ2FyZCgpO1xyXG4gIHJldHVybiBjYXJkRWxlbWVudDtcclxufVxyXG5cclxuZnVuY3Rpb24gb3BlblBvcHVwQWRkKCkge1xyXG4gIHBvcHVwQWRkLm9wZW4oKTtcclxuICBjYXJkRm9ybVZhbGlkYXRvci5kaXNhYmxlU3VibWl0QnV0dG9uKCk7XHJcbn1cclxuXHJcbmZ1bmN0aW9uIHN1Ym1pdFBvcHVwQWRkKGRhdGEpIHtcclxuICBhcGkuc2VuZENhcmQoZGF0YSlcclxuICAudGhlbigocmVzKSA9PiB7XHJcbiAgICBjb25zdCBjYXJkID0gY3JlYXRlQ2FyZChyZXMpO1xyXG4gICAgY2FyZENvbnRhaW5lci5wcmVwZW5kSXRlbShjYXJkKTtcclxuICAgIHBvcHVwQWRkLmNsb3NlKCk7XHJcbiAgfSlcclxuICAuY2F0Y2ggKGVyciA9PiB7XHJcbiAgICBjb25zb2xlLmxvZyhg0J7RiNC40LHQutCwINC/0YDQuCDQtNC+0LHQsNCy0LvQtdC90LjQuCDQutCw0YDRgtC+0YfQutC4JHtlcnJ9YCk7XHJcbiAgfSlcclxufVxyXG5cclxuZnVuY3Rpb24gc3VibWl0UG9wdXBEZWxldGUoKSB7XHJcbiAgcG9wdXBEZWxldGUuY2xvc2UoKTtcclxufVxyXG5cclxuLy8g0L/RgNC+0YTQuNC70YwgXHJcblxyXG5hcGkuZ2V0UHJvZmlsZUluZm8oKVxyXG4udGhlbigoZGF0YSkgPT4ge1xyXG4gIGNvbnN0IHVzZXIgPSBuZXcgVXNlckluZm8oZGF0YSk7XHJcbiAgY29uc3QgdXNlckluZm8gPSB1c2VyLmdldFVzZXJJbmZvKCk7XHJcbiAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnByb2ZpbGVfX3RpdGxlJykudGV4dENvbnRlbnQgPSB1c2VySW5mby5uYW1lO1xyXG4gIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wcm9maWxlX19hdmF0YXInKS5hbHQgPSB1c2VySW5mby5uYW1lO1xyXG4gIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wcm9maWxlX19hdmF0YXInKS5zcmMgPSB1c2VySW5mby5hdmF0YXI7XHJcbiAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnByb2ZpbGVfX3N1YnRpdGxlJykudGV4dENvbnRlbnQgPSB1c2VySW5mby5hYm91dDtcclxufSlcclxuLmNhdGNoKGVyciA9PiB7XHJcbiAgY29uc29sZS5sb2coZXJyID0+IHtcclxuICAgIGNvbnNvbGUubG9nKGVycik7XHJcbiAgfSlcclxufSkgXHJcblxyXG5mdW5jdGlvbiBvcGVuUG9wdXBFZGl0KCkge1xyXG4gIGNvbnN0IHVzZXJJbmZvID0gdXNlci5nZXRVc2VySW5mbygpO1xyXG4gIG5hbWVJbnB1dC52YWx1ZSA9IHVzZXJJbmZvLm5hbWU7XHJcbiAgam9iSW5wdXQudmFsdWUgPSB1c2VySW5mby5hYm91dDtcclxuICBwb3B1cEVkaXQub3BlbigpO1xyXG59XHJcblxyXG5mdW5jdGlvbiBzdWJtaXRQb3B1cEVkaXQoZGF0YSkge1xyXG4gIHVzZXIuc2V0VXNlckluZm8oZGF0YSk7XHJcbiAgYXBpLnNlbmRQcm9maWxlSW5mbyh1c2VyLmdldFVzZXJJbmZvKCkpXHJcbiAgLnRoZW4oKCkgPT4ge1xyXG4gICAgcG9wdXBFZGl0LmNsb3NlKCk7XHJcbiAgfSlcclxuICAuY2F0Y2goZXJyID0+IHtcclxuICAgIGNvbnNvbGUubG9nKGDQntGI0LjQsdC60LAg0L/RgNC4INGA0LXQtNCw0LrRgtC40YDQvtCy0LDQvdC40Lgg0L/RgNC+0YTQuNC70Y8ke2Vycn1gKTtcclxuICB9KVxyXG4gIC5maW5hbGx5KCgpID0+IHtcclxuICAgIGVkaXRGb3JtVmFsaWRhdG9yLmRpc2FibGVTdWJtaXRCdXR0b24oKTtcclxuICB9KVxyXG59XHJcblxyXG4vLyDRgdC70YPRiNCw0YLQtdC70LhcclxuYWRkQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xyXG4gIG9wZW5Qb3B1cEFkZCgpO1xyXG59KTtcclxuZWRpdEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcclxuICBvcGVuUG9wdXBFZGl0KCk7XHJcbn0pO1xyXG5cclxuXHJcblxyXG4iXSwibmFtZXMiOlsiQ2FyZCIsImRhdGEiLCJ0ZW1wbGF0ZVNlbGVjdG9yIiwiaGFuZGxlQ2FyZENsaWNrIiwiaGFuZGxlT3BlblBvcHVwIiwibGlrZU51bWJlciIsInVzZXJJZCIsInRoaXMiLCJfbmFtZSIsIm5hbWUiLCJfbGluayIsImxpbmsiLCJfaWQiLCJvd25lciIsIl91c2VySWQiLCJfdGVtcGxhdGVTZWxlY3RvciIsIl9oYW5kbGVDYXJkQ2xpY2siLCJfaGFuZGxlT3BlblBvcHVwIiwiX2xpa2VOdW1iZXIiLCJjb25zb2xlIiwibG9nIiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwiY29udGVudCIsImNsb25lTm9kZSIsIl9lbGVtZW50IiwiX2dldFRlbXBsYXRlIiwiX2NhcmRJbWFnZSIsIl9jYXJkTGlrZSIsIl9jYXJkQmFza2V0IiwiX3NldEV2ZW50TGlzdGVuZXJzIiwiX3JlbW92ZUNhcmRCYXNrZXQiLCJ0ZXh0Q29udGVudCIsInNyYyIsImFsdCIsImFkZEV2ZW50TGlzdGVuZXIiLCJfaGFuZGxlTGlrZSIsImNsYXNzTGlzdCIsInRvZ2dsZSIsInJlbW92ZSIsIkZvcm1WYWxpZGF0b3IiLCJmb3JtIiwiaW5wdXQiLCJlcnJvck1lc3NhZ2UiLCJfZm9ybSIsImlkIiwidmFsaWRhdGlvbk1lc3NhZ2UiLCJhZGQiLCJfZXJyb3JDbGFzcyIsIl9pbnB1dEVycm9yQ2xhc3MiLCJpbnB1dHMiLCJBcnJheSIsImZyb20iLCJzb21lIiwiZWxlbWVudCIsInZhbGlkaXR5IiwidmFsaWQiLCJidXR0b24iLCJfaGFzSW52YWxpZElucHV0IiwiX2lucHV0cyIsImRpc2FibGVTdWJtaXRCdXR0b24iLCJlbmFibGVTdWJtaXRCdXR0b24iLCJxdWVyeVNlbGVjdG9yQWxsIiwiX2lucHV0U2VsZWN0b3IiLCJfc3VibWl0QnV0dG9uIiwiX3N1Ym1pdEJ1dHRvblNlbGVjdG9yIiwiZm9yRWFjaCIsIl9jaGVja0lmSW5wdXRWYWxpZCIsIl90b2dnbGVCdXR0b25FcnJvciIsImV2ZW50IiwicHJldmVudERlZmF1bHQiLCJfc2V0SW5wdXRMaXN0ZW5lcnMiLCJfZm9ybVNlbGVjdG9yIiwiZm9ybVNlbGVjdG9yIiwiaW5wdXRTZWxlY3RvciIsInN1Ym1pdEJ1dHRvblNlbGVjdG9yIiwiX2luYWN0aXZlQnV0dG9uQ2xhc3MiLCJpbmFjdGl2ZUJ1dHRvbkNsYXNzIiwiaW5wdXRFcnJvckNsYXNzIiwiZXJyb3JDbGFzcyIsImlucHV0RWxlbWVudCIsIl9oaWRlSW5wdXRFcnJvciIsImRpc2FibGVkIiwiX3Nob3dJbnB1dEVycm9yIiwiU2VjdGlvbiIsImNvbnRhaW5lclNlbGVjdG9yIiwicmVuZGVyZXIiLCJfcmVuZGVyZXIiLCJfY29udGFpbmVyIiwiYXBwZW5kIiwiaW5uZXJIVE1MIiwiaXRlbXMiLCJjbGVhciIsIml0ZW0iLCJjYXJkIiwicHJlcGVuZCIsIlBvcHVwIiwicG9wdXBTZWxlY3RvciIsIl9wb3B1cCIsIl9oYW5kbGVFc2NDbG9zZSIsImJpbmQiLCJjbG9zZSIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJldnQiLCJrZXkiLCJ0YXJnZXQiLCJjb250YWlucyIsIlBvcHVwV2l0aEltYWdlIiwiX2ltYWdlIiwiX2Rlc2NyaXB0aW9uIiwiUG9wdXBXaXRoRm9ybSIsImhhbmRsZUZvcm1TdWJtaXQiLCJfaGFuZGxlRm9ybVN1Ym1pdCIsIl9pbnB1dExpc3QiLCJfZm9ybVZhbHVlcyIsInZhbHVlIiwiX2dldElucHV0VmFsdWVzIiwicmVzZXQiLCJQb3B1cFdpdGhDb25maXJtIiwiVXNlckluZm8iLCJhYm91dCIsImF2YXRhciIsIl9hYm91dCIsIl9hdmF0YXIiLCJfZGF0YU9iamVjdCIsImVkaXRCdXR0b24iLCJhZGRCdXR0b24iLCJmb3JtRWRpdCIsImZvcm1BZGQiLCJuYW1lSW5wdXQiLCJqb2JJbnB1dCIsInVzZXJEZXNjcmlwdGlvbiIsImVsZW1lbnRzQ29udGFpbmVyIiwidmFsaWRhdGlvbkNvbmZpZyIsIkFwaSIsImFkZHJlc3MiLCJ0b2tlbiIsIl9hZGRyZXNzIiwiX3Rva2VuIiwiZmV0Y2giLCJoZWFkZXJzIiwiYXV0aG9yaXphdGlvbiIsInRoZW4iLCJyZXMiLCJvayIsImpzb24iLCJQcm9taXNlIiwicmVqZWN0Iiwic3RhdHVzIiwibWV0aG9kIiwiYm9keSIsIkpTT04iLCJzdHJpbmdpZnkiLCJlZGl0Rm9ybVZhbGlkYXRvciIsImNhcmRGb3JtVmFsaWRhdG9yIiwiZW5hYmxlVmFsaWRhdGlvbiIsInBvcHVwUGljdHVyZSIsInNldEV2ZW50TGlzdGVuZXJzIiwicG9wdXBFZGl0IiwidXNlciIsInNldFVzZXJJbmZvIiwiYXBpIiwic2VuZFByb2ZpbGVJbmZvIiwiZ2V0VXNlckluZm8iLCJjYXRjaCIsImVyciIsImZpbmFsbHkiLCJwb3B1cEFkZCIsInNlbmRDYXJkIiwiY3JlYXRlQ2FyZCIsImNhcmRDb250YWluZXIiLCJwcmVwZW5kSXRlbSIsInBvcHVwRGVsZXRlIiwibGlrZXMiLCJsZW5ndGgiLCJhZGRJdGVtIiwib3BlbiIsImdldElkIiwiZ2VuZXJhdGVDYXJkIiwiZ2V0Q2FyZHMiLCJjYXJkcyIsInJlbmRlckl0ZW1zIiwiZ2V0UHJvZmlsZUluZm8iLCJ1c2VySW5mbyJdLCJzb3VyY2VSb290IjoiIn0=