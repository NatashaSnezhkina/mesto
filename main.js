(()=>{"use strict";function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var t=function(){function t(e,n,r,o,i,a,c,u){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this._name=e.name,this._link=e.link,this._id=e._id,this._ownerId=e.owner._id,this._usersLikes=e.likes,this._userId=a,this._templateSelector=n,this._handleCardClick=r,this._handleOpenPopup=o,this._likeNumber=i,this._handleAddLike=c,this._handleDeleteLike=u}var n,r;return n=t,r=[{key:"_getTemplate",value:function(){return document.querySelector(this._templateSelector).content.querySelector(".element").cloneNode(!0)}},{key:"generateCard",value:function(){return this._element=this._getTemplate(),this._cardImage=this._element.querySelector(".element__photo"),this._cardLike=this._element.querySelector(".element__like"),this._cardBasket=this._element.querySelector(".element__basket"),this._setEventListeners(),this._removeCardBasket(),this._checkLike(),this._element.querySelector(".element__title").textContent=this._name,this._element.querySelector(".element__like__counter").textContent=this._likeNumber,this._cardImage.src=this._link,this._cardImage.alt=this._name,this._element}},{key:"_setEventListeners",value:function(){var e=this;this._cardLike.addEventListener("click",(function(){e._cardLike.classList.contains("element__like_active")?e._handleDeleteLike(e):e._handleAddLike(e)})),this._cardBasket.addEventListener("click",(function(){e._handleOpenPopup(e)})),this._cardImage.addEventListener("click",(function(){e._handleCardClick(e._name,e._link)}))}},{key:"_removeCardBasket",value:function(){this._ownerId!==this._userId&&this._cardBasket.remove()}},{key:"_checkLike",value:function(){var e=this;this._usersLikes.forEach((function(t){t._id===e._userId&&e._cardLike.classList.add("element__like_active")}))}},{key:"getView",value:function(){return this._element}},{key:"deleteCard",value:function(){this._element.remove()}}],r&&e(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),t}();function n(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}const o=function(){function e(t,n){var o=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),r(this,"_showInputError",(function(e){var t=o._form.querySelector("#".concat(e.id,"-error"));t.textContent=e.validationMessage,t.classList.add(o._errorClass),e.classList.add(o._inputErrorClass)})),r(this,"_hideInputError",(function(e){var t=o._form.querySelector("#".concat(e.id,"-error"));t.textContent=" ",t.classList.remove(o._errorClass),e.classList.remove(o._inputErrorClass)})),r(this,"_hasInvalidInput",(function(e){return Array.from(e).some((function(e){return!e.validity.valid}))})),r(this,"_toggleButtonError",(function(e){o._hasInvalidInput(o._inputs)?o.disableSubmitButton():o.enableSubmitButton()})),r(this,"_setInputListeners",(function(){o._inputs=o._form.querySelectorAll(o._inputSelector),o._submitButton=o._form.querySelector(o._submitButtonSelector),o._inputs.forEach((function(e){e.addEventListener("input",(function(){o._checkIfInputValid(e),o._toggleButtonError(o._submitButton)}))}))})),r(this,"enableValidation",(function(){o._form.addEventListener("submit",(function(e){e.preventDefault()})),o._setInputListeners()})),this._form=n,this._formSelector=t.formSelector,this._inputSelector=t.inputSelector,this._submitButtonSelector=t.submitButtonSelector,this._inactiveButtonClass=t.inactiveButtonClass,this._inputErrorClass=t.inputErrorClass,this._errorClass=t.errorClass}var t,o;return t=e,(o=[{key:"resetValidation",value:function(){var e=this;this._toggleButtonError(this._submitButton),this._inputs.forEach((function(t){e._hideInputError(t)}))}},{key:"disableSubmitButton",value:function(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0,this._submitButton.style.cursor="default"}},{key:"enableSubmitButton",value:function(){this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}},{key:"_checkIfInputValid",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}}])&&n(t.prototype,o),Object.defineProperty(t,"prototype",{writable:!1}),e}();function i(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var a=function(){function e(t,n){var r=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderer=r,this._container=n}var t,n;return t=e,(n=[{key:"addItem",value:function(e){this._container.append(e)}},{key:"clear",value:function(){this._container.innerHTML=""}},{key:"renderItems",value:function(e){var t=this;this.clear(),e.forEach((function(e){t._renderer(e)}))}},{key:"prependItem",value:function(e){this._container.prepend(e)}}])&&i(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function c(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var u=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popup=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this),this.close=this.close.bind(this)}var t,n;return t=e,(n=[{key:"open",value:function(){this._popup.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popup.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}},{key:"setEventListeners",value:function(){var e=this;this._popup.addEventListener("click",(function(t){(t.target.classList.contains("popup__overlay")||t.target.classList.contains("close-button"))&&e.close()}))}}])&&c(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function s(e){return s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},s(e)}function l(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function f(){return f="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=p(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},f.apply(this,arguments)}function p(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=h(e)););return e}function d(e,t){return d=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},d(e,t)}function _(e,t){if(t&&("object"===s(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function h(e){return h=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},h(e)}var y=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&d(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=h(r);if(o){var n=h(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return _(this,e)});function a(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,e))._image=t._popup.querySelector(".popup-picture__image"),t._description=t._popup.querySelector(".popup-picture__description"),t}return t=a,(n=[{key:"open",value:function(e,t){this._image.src=t,this._image.alt=e,this._description.textContent=e,f(h(a.prototype),"open",this).call(this)}}])&&l(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(u);function v(e){return v="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},v(e)}function m(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function b(){return b="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=k(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},b.apply(this,arguments)}function k(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=w(e)););return e}function g(e,t){return g=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},g(e,t)}function S(e,t){if(t&&("object"===v(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function w(e){return w=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},w(e)}var E=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&g(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=w(r);if(o){var n=w(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return S(this,e)});function a(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,e))._handleFormSubmit=t,n._submitButtonSelector=n._popup.querySelector(".submit-button"),n._inputList=Array.from(n._popup.querySelectorAll(".popup__input")),n._form=n._popup.querySelector(".popup__form"),n}return t=a,(n=[{key:"_getInputValues",value:function(){var e=this;return this._formValues={},this._inputList.forEach((function(t){e._formValues[t.name]=t.value})),this._formValues}},{key:"setEventListeners",value:function(){var e=this;b(w(a.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(t){t.preventDefault(),e._handleFormSubmit(e._getInputValues())}))}},{key:"close",value:function(){b(w(a.prototype),"close",this).call(this),this._form.reset()}},{key:"renderLoading",value:function(e){this._submitButtonSelector.textContent=e?"Сохранение...":this._submitButtonSelector.textContent}}])&&m(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(u);function L(e){return L="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},L(e)}function O(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function C(){return C="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=P(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},C.apply(this,arguments)}function P(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=q(e)););return e}function j(e,t){return j=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},j(e,t)}function I(e,t){if(t&&("object"===L(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function q(e){return q=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},q(e)}var B=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&j(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=q(r);if(o){var n=q(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return I(this,e)});function a(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,e))._handleFormSubmit=t,n._submitButtonSelector=n._popup.querySelector(".submit-button"),n._form=n._popup.querySelector(".popup__form"),n}return t=a,(n=[{key:"setEventListeners",value:function(){var e=this;C(q(a.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(t){t.preventDefault(),e._handleFormSubmit(e._card)}))}},{key:"getReadyToDelete",value:function(e){this._card=e}}])&&O(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(u);function T(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var R=function(){function e(t){var n=t.name,r=t.about,o=t.avatar,i=t._id;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=n,this._about=r,this._avatar=o,this._id=i}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return this._dataObject={name:this._name,about:this._about,avatar:this._avatar,id:this._id},this._dataObject}},{key:"setUserInfo",value:function(e){this._name=e.name,this._about=e.about,this._id=e._id}},{key:"setUserAvatar",value:function(e){this._avatar=e.avatar}},{key:"getId",value:function(){return this._id}}])&&T(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}(),x=document.querySelector(".edit-button"),D=document.querySelector(".add-button"),U=document.querySelector(".form-edit"),A=document.querySelector(".form-add"),V=document.querySelector(".form-avatar"),z=document.querySelector(".field_type_name"),N=document.querySelector(".field_type_description"),F=document.querySelector(".popup-avatar__input"),H=document.querySelector(".profile__avatar"),J=document.querySelector(".profile__avatar-overlay"),M={name:document.querySelector(".profile__title").textContent,about:document.querySelector(".profile__subtitle").textContent,avatar:document.querySelector(".profile__avatar").src},G=document.querySelector(".elements"),K={formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__button",inactiveButtonClass:"popup__button_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_visible"};function Q(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var W=function(){function e(t){var n=t.address,r=t.token;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._address=n,this._token=r}var t,n;return t=e,(n=[{key:"_responseProcessing",value:function(){return function(e){return e.ok?e.json():Promise.reject("Ошибка ".concat(e.status))}}},{key:"getCards",value:function(){return fetch("".concat(this._address,"/cards"),{headers:{authorization:this._token}}).then(this._responseProcessing())}},{key:"sendCard",value:function(e){return fetch("".concat(this._address,"/cards"),{method:"POST",headers:{authorization:this._token,"Content-Type":"application/json"},body:JSON.stringify({name:e.name,link:e.link})}).then(this._responseProcessing())}},{key:"getProfileInfo",value:function(){return fetch("".concat(this._address,"//users/me"),{headers:{authorization:this._token}}).then(this._responseProcessing())}},{key:"sendProfileInfo",value:function(e){return fetch("".concat(this._address,"/users/me"),{method:"PATCH",headers:{authorization:this._token,"Content-Type":"application/json"},body:JSON.stringify({name:e.name,about:e.about})}).then(this._responseProcessing())}},{key:"sendAvatar",value:function(e){return fetch("".concat(this._address,"/users/me/avatar"),{method:"PATCH",headers:{authorization:this._token,"Content-Type":"application/json"},body:JSON.stringify({avatar:e.avatar})}).then(this._responseProcessing())}},{key:"deleteCard",value:function(e){return fetch("".concat(this._address,"/cards/").concat(e),{method:"DELETE",headers:{authorization:this._token,"Content-Type":"application/json"}}).then(this._responseProcessing())}},{key:"addLike",value:function(e){return fetch("".concat(this._address,"/cards/").concat(e,"/likes"),{method:"PUT",headers:{authorization:this._token,"Content-Type":"application/json"}}).then(this._responseProcessing())}},{key:"deleteLike",value:function(e){return fetch("".concat(this._address,"/cards/").concat(e,"/likes"),{method:"DELETE",headers:{authorization:this._token,"Content-Type":"application/json"}}).then(this._responseProcessing())}}])&&Q(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}(),X=new o(K,U),Y=new o(K,A),Z=new o(K,V);X.enableValidation(),Y.enableValidation(),Z.enableValidation();var $=new y(".popup-picture");$.setEventListeners();var ee=new E(".popup-edit",(function(e){ee.renderLoading(!0),ie.setUserInfo(e),ae.sendProfileInfo(ie.getUserInfo()).then((function(e){ee.close();var t=(oe=new R(e)).getUserInfo();document.querySelector(".profile__title").textContent=t.name,document.querySelector(".profile__avatar").alt=t.name,document.querySelector(".profile__avatar").src=t.avatar,document.querySelector(".profile__subtitle").textContent=t.about})).catch((function(e){console.log("Ошибка при редактировании профиля".concat(e))})).finally((function(){X.disableSubmitButton(),ee.renderLoading(!1)}))}));ee.setEventListeners();var te=new E(".popup-add",(function(e){te.renderLoading(!0),ae.sendCard(e).then((function(e){var t=se(e,e.likes.length);le.prependItem(t),te.close()})).catch((function(e){console.log("Ошибка при добавлении карточки".concat(e))})).finally((function(){te.renderLoading(!1)}))}));te.setEventListeners();var ne=new B(".popup-delete",(function(e){var t=e._id;ae.deleteCard(t).then((function(){e.deleteCard(),ne.close()})).catch((function(e){console.log("Ошибка при удалении карточки".concat(e))}))}));ne.setEventListeners();var re=new E(".popup-avatar",(function(e){re.renderLoading(!0),ie.setUserAvatar(e),ae.sendAvatar(e).then((function(e){re.close();var t=(oe=new R(e)).getUserInfo();document.querySelector(".profile__avatar").src=t.avatar})).catch((function(e){console.log("Ошибка при редактировании профиля".concat(e))})).finally((function(){re.renderLoading(!1)}))}));re.setEventListeners();var oe,ie=new R(M);console.log(ie);var ae=new W({address:"https://mesto.nomoreparties.co/v1/cohort-35",token:"b6ff83c2-3ced-4557-872e-eefa9152b997"}),ce=ae.getProfileInfo(),ue=ae.getCards();function se(e,n){return new t(e,".element-template",fe,pe,n,oe.getId(),de,_e).generateCard()}var le=new a({renderer:function(e){var t=se(e,e.likes.length);le.addItem(t)}},G);function fe(e,t){$.open(e,t)}function pe(e){ne.open(),ne.getReadyToDelete(e)}function de(e){var t=e._id;ae.addLike(t).then((function(t){e._element.querySelector(".element__like__counter").textContent=t.likes.length,e._element.querySelector(".element__like").classList.add("element__like_active")})).catch((function(e){console.log("Ошибка при лайке карточки".concat(e))}))}function _e(e){var t=e._id;ae.deleteLike(t).then((function(t){e._element.querySelector(".element__like__counter").textContent=t.likes.length,e._element.querySelector(".element__like").classList.remove("element__like_active")})).catch((function(e){console.log("Ошибка при удалении лайка карточки".concat(e))}))}Promise.all([ce,ue]).then((function(e){ie.setUserInfo(e[0]),ie.setUserAvatar(e[0]),le.createCards(e[1])})).catch((function(e){return console.log("Ошибка.....: ".concat(e))})),ae.getCards().then((function(e){le.renderItems(e)})).catch((function(e){console.log((function(e){console.log(e)}))})),ae.getProfileInfo().then((function(e){var t=(oe=new R(e)).getUserInfo();document.querySelector(".profile__title").textContent=t.name,document.querySelector(".profile__avatar").alt=t.name,document.querySelector(".profile__avatar").src=t.avatar,document.querySelector(".profile__subtitle").textContent=t.about})).catch((function(e){console.log((function(e){console.log(e)}))})),D.addEventListener("click",(function(){te.open(),Y.disableSubmitButton()})),x.addEventListener("click",(function(){var e;e=ie.getUserInfo(),z.value=e.name,N.value=e.about,ee.open()})),H.addEventListener("mouseenter",(function(){J.classList.remove("profile__avatar-overlay_closed")})),H.addEventListener("mouseleave",(function(){J.classList.add("profile__avatar-overlay_closed")})),J.addEventListener("click",(function(){var e;e=ie.getUserInfo(),F.value=e.avatar,re.open(),J.classList.add("profile__avatar__overlay_closed")}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,