(()=>{"use strict";function e(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}var t=function(){function t(e,n,o,r,i,a,c,u){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this._name=e.name,this._link=e.link,this._id=e._id,this._ownerId=e.owner._id,this._userId=a,this._templateSelector=n,this._handleCardClick=o,this._handleOpenPopup=r,this._likeNumber=i,this._handleAddLike=c,this._handleDeleteLike=u}var n,o;return n=t,(o=[{key:"_getTemplate",value:function(){return console.log(this._templateSelector),document.querySelector(this._templateSelector).content.querySelector(".element").cloneNode(!0)}},{key:"generateCard",value:function(){return this._element=this._getTemplate(),this._cardImage=this._element.querySelector(".element__photo"),this._cardLike=this._element.querySelector(".element__like"),this._cardBasket=this._element.querySelector(".element__basket"),this._setEventListeners(),this._removeCardBasket(),this._element.querySelector(".element__title").textContent=this._name,this._element.querySelector(".element__like__counter").textContent=this._likeNumber,this._cardImage.src=this._link,this._cardImage.alt=this._name,this._element}},{key:"_setEventListeners",value:function(){var e=this;this._cardLike.addEventListener("click",(function(){console.log(e),console.log(e._element),e._cardLike.classList.contains("element__like_active")?e._handleDeleteLike(e):e._handleAddLike(e)})),this._cardBasket.addEventListener("click",(function(){e._handleOpenPopup(e)})),this._cardImage.addEventListener("click",(function(){e._handleCardClick(e._name,e._link)}))}},{key:"_removeCardBasket",value:function(){this._ownerId!==this._userId&&this._cardBasket.remove()}},{key:"getView",value:function(){return this._element}},{key:"deleteCard",value:function(){this._element.remove()}}])&&e(n.prototype,o),Object.defineProperty(n,"prototype",{writable:!1}),t}();function n(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}const r=function(){function e(t,n){var r=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),o(this,"_showInputError",(function(e){var t=r._form.querySelector("#".concat(e.id,"-error"));t.textContent=e.validationMessage,t.classList.add(r._errorClass),e.classList.add(r._inputErrorClass)})),o(this,"_hideInputError",(function(e){var t=r._form.querySelector("#".concat(e.id,"-error"));t.textContent=" ",t.classList.remove(r._errorClass),e.classList.remove(r._inputErrorClass)})),o(this,"_hasInvalidInput",(function(e){return Array.from(e).some((function(e){return!e.validity.valid}))})),o(this,"_toggleButtonError",(function(e){r._hasInvalidInput(r._inputs)?r.disableSubmitButton():r.enableSubmitButton()})),o(this,"_setInputListeners",(function(){r._inputs=r._form.querySelectorAll(r._inputSelector),r._submitButton=r._form.querySelector(r._submitButtonSelector),r._inputs.forEach((function(e){e.addEventListener("input",(function(){r._checkIfInputValid(e),r._toggleButtonError(r._submitButton)}))}))})),o(this,"enableValidation",(function(){r._form.addEventListener("submit",(function(e){e.preventDefault()})),r._setInputListeners()})),this._form=n,this._formSelector=t.formSelector,this._inputSelector=t.inputSelector,this._submitButtonSelector=t.submitButtonSelector,this._inactiveButtonClass=t.inactiveButtonClass,this._inputErrorClass=t.inputErrorClass,this._errorClass=t.errorClass}var t,r;return t=e,(r=[{key:"resetValidation",value:function(){var e=this;this._toggleButtonError(this._submitButton),this._inputs.forEach((function(t){e._hideInputError(t)}))}},{key:"disableSubmitButton",value:function(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}},{key:"enableSubmitButton",value:function(){this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}},{key:"_checkIfInputValid",value:function(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}}])&&n(t.prototype,r),Object.defineProperty(t,"prototype",{writable:!1}),e}();function i(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}var a=function(){function e(t,n){var o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderer=o,this._container=n}var t,n;return t=e,(n=[{key:"addItem",value:function(e){this._container.append(e)}},{key:"clear",value:function(){this._container.innerHTML=""}},{key:"renderItems",value:function(e){var t=this;this.clear(),e.forEach((function(e){t._renderer(e)}))}},{key:"prependItem",value:function(e){this._container.prepend(e)}}])&&i(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function c(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}var u=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popup=document.querySelector(t),this._handleEscClose=this._handleEscClose.bind(this),this.close=this.close.bind(this)}var t,n;return t=e,(n=[{key:"open",value:function(){this._popup.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popup.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}},{key:"setEventListeners",value:function(){var e=this;this._popup.addEventListener("click",(function(t){(t.target.classList.contains("popup__overlay")||t.target.classList.contains("close-button"))&&e.close()}))}}])&&c(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function s(e){return s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},s(e)}function l(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function f(){return f="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var o=p(e,t);if(o){var r=Object.getOwnPropertyDescriptor(o,t);return r.get?r.get.call(arguments.length<3?e:n):r.value}},f.apply(this,arguments)}function p(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=h(e)););return e}function _(e,t){return _=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},_(e,t)}function d(e,t){if(t&&("object"===s(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function h(e){return h=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},h(e)}var y=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&_(e,t)}(a,e);var t,n,o,r,i=(o=a,r=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=h(o);if(r){var n=h(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return d(this,e)});function a(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,e))._image=t._popup.querySelector(".popup-picture__image"),t._description=t._popup.querySelector(".popup-picture__description"),t}return t=a,(n=[{key:"open",value:function(e,t){this._image.src=t,this._image.alt=e,this._description.textContent=e,f(h(a.prototype),"open",this).call(this)}}])&&l(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(u);function v(e){return v="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},v(e)}function m(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function b(){return b="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var o=k(e,t);if(o){var r=Object.getOwnPropertyDescriptor(o,t);return r.get?r.get.call(arguments.length<3?e:n):r.value}},b.apply(this,arguments)}function k(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=w(e)););return e}function g(e,t){return g=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},g(e,t)}function S(e,t){if(t&&("object"===v(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function w(e){return w=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},w(e)}var E=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&g(e,t)}(a,e);var t,n,o,r,i=(o=a,r=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=w(o);if(r){var n=w(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return S(this,e)});function a(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,e))._handleFormSubmit=t,n._submitButtonSelector=n._popup.querySelector(".submit-button"),n._inputList=Array.from(n._popup.querySelectorAll(".popup__input")),n._form=n._popup.querySelector(".popup__form"),n}return t=a,(n=[{key:"_getInputValues",value:function(){var e=this;return this._formValues={},this._inputList.forEach((function(t){e._formValues[t.name]=t.value})),this._formValues}},{key:"setEventListeners",value:function(){var e=this;b(w(a.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(t){t.preventDefault(),e._handleFormSubmit(e._getInputValues())}))}},{key:"close",value:function(){b(w(a.prototype),"close",this).call(this),this._form.reset()}}])&&m(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(u);function j(e){return j="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},j(e)}function O(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}function C(){return C="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var o=L(e,t);if(o){var r=Object.getOwnPropertyDescriptor(o,t);return r.get?r.get.call(arguments.length<3?e:n):r.value}},C.apply(this,arguments)}function L(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=q(e)););return e}function P(e,t){return P=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},P(e,t)}function I(e,t){if(t&&("object"===j(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function q(e){return q=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},q(e)}var B=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&P(e,t)}(a,e);var t,n,o,r,i=(o=a,r=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=q(o);if(r){var n=q(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return I(this,e)});function a(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,e))._handleFormSubmit=t,n._submitButtonSelector=n._popup.querySelector(".submit-button"),n._form=n._popup.querySelector(".popup__form"),n}return t=a,(n=[{key:"setEventListeners",value:function(){var e=this;C(q(a.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(t){t.preventDefault(),e._handleFormSubmit(e._card)}))}},{key:"getReadyToDelete",value:function(e){this._card=e}}])&&O(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(u);function T(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}var R=function(){function e(t){var n=t.name,o=t.about,r=t.avatar,i=t._id;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._name=n,this._about=o,this._avatar=r,this._id=i}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return this._dataObject={name:this._name,about:this._about,avatar:this._avatar,id:this._id},this._dataObject}},{key:"setUserInfo",value:function(e){this._name=e.name,this._about=e.about,this._id=e._id}},{key:"setUserAvatar",value:function(e){this._avatar=e.avatar}},{key:"getId",value:function(){return this._id}}])&&T(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}(),x=document.querySelector(".edit-button"),D=document.querySelector(".add-button"),V=document.querySelector(".form-edit"),A=document.querySelector(".form-add"),U=document.querySelector(".form-avatar"),z=document.querySelector(".field_type_name"),N=document.querySelector(".field_type_description"),F=document.querySelector(".popup-avatar__input"),H=document.querySelector(".profile__avatar"),J=document.querySelector(".profile__avatar__overlay"),M={name:document.querySelector(".profile__title").textContent,about:document.querySelector(".profile__subtitle").textContent,avatar:document.querySelector(".profile__avatar").src},G=document.querySelector(".elements"),K={formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__button",inactiveButtonClass:"popup__button_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_visible"};function Q(e,t){for(var n=0;n<t.length;n++){var o=t[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}var W=function(){function e(t){var n=t.address,o=t.token;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._address=n,this._token=o}var t,n;return t=e,(n=[{key:"getCards",value:function(){return fetch("".concat(this._address,"/cards"),{headers:{authorization:this._token}}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка ".concat(e.status))}))}},{key:"sendCard",value:function(e){return fetch("".concat(this._address,"/cards"),{method:"POST",headers:{authorization:this._token,"Content-Type":"application/json"},body:JSON.stringify({name:e.name,link:e.link})}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка ".concat(e.status))}))}},{key:"getProfileInfo",value:function(){return fetch("".concat(this._address,"//users/me"),{headers:{authorization:this._token}}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка ".concat(e.status))}))}},{key:"sendProfileInfo",value:function(e){return fetch("".concat(this._address,"/users/me"),{method:"PATCH",headers:{authorization:this._token,"Content-Type":"application/json"},body:JSON.stringify({name:e.name,about:e.about})}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка ".concat(e.status))}))}},{key:"sendAvatar",value:function(e){return fetch("".concat(this._address,"/users/me/avatar"),{method:"PATCH",headers:{authorization:this._token,"Content-Type":"application/json"},body:JSON.stringify({avatar:e.avatar})}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка ".concat(e.status))}))}},{key:"deleteCard",value:function(e){return fetch("".concat(this._address,"/cards/").concat(e),{method:"DELETE",headers:{authorization:this._token,"Content-Type":"application/json"}}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка ".concat(e.status))}))}},{key:"addLike",value:function(e){return fetch("".concat(this._address,"/cards/").concat(e,"/likes"),{method:"PUT",headers:{authorization:this._token,"Content-Type":"application/json"}}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка ".concat(e.status))}))}},{key:"deleteLike",value:function(e){return fetch("".concat(this._address,"/cards/").concat(e,"/likes"),{method:"DELETE",headers:{authorization:this._token,"Content-Type":"application/json"}}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка ".concat(e.status))}))}}])&&Q(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}(),X=new r(K,V),Y=new r(K,A),Z=new r(K,U);X.enableValidation(),Y.enableValidation(),Z.enableValidation();var $=new y(".popup-picture");$.setEventListeners();var ee=new E(".popup-edit",(function(e){ie.setUserInfo(e),ae.sendProfileInfo(ie.getUserInfo()).then((function(){ee.close()})).catch((function(e){console.log("Ошибка при редактировании профиля".concat(e))})).finally((function(){X.disableSubmitButton()}))}));ee.setEventListeners();var te=new E(".popup-add",(function(e){ae.sendCard(e).then((function(e){var t=le(e);ce.prependItem(t),te.close(),console.log(ie.getId())})).catch((function(e){console.log("Ошибка при добавлении карточки".concat(e))}))}));te.setEventListeners();var ne=new B(".popup-delete",(function(e){var t=e._id;ae.deleteCard(t).then((function(){e.deleteCard(),ne.close()})).catch((function(e){console.log("Ошибка при удалении карточки".concat(e))}))}));ne.setEventListeners();var oe=new E(".popup-avatar",(function(e){ie.setUserAvatar(e),ae.sendAvatar(e).then((function(){oe.close()})).catch((function(e){console.log("Ошибка при редактировании профиля".concat(e))}))}));oe.setEventListeners();var re,ie=new R(M);console.log(ie);var ae=new W({address:"https://mesto.nomoreparties.co/v1/cohort-35",token:"b6ff83c2-3ced-4557-872e-eefa9152b997"}),ce=new a({renderer:function(e){var t=le(e,e.likes.length);ce.addItem(t)}},G);function ue(e,t){$.open(e,t)}function se(e){ne.open(),ne.getReadyToDelete(e)}function le(e,n){var o=new t(e,".element-template",ue,se,n,re.getId(),fe,pe);return e.likes.forEach((function(e){(e._id=re.getId())?o._element.querySelector(".element__like").classList.add("element__like_active"):o._element.querySelector(".element__like").classList.remove("element__like_active")})),o.generateCard()}function fe(e){var t=e._id;ae.addLike(t).then((function(t){e._element.querySelector(".element__like__counter").textContent=t.likes.length,e._element.querySelector(".element__like").classList.add("element__like_active")})).catch((function(e){console.log("Ошибка при лайке карточки".concat(e))}))}function pe(e){var t=e._id;ae.deleteLike(t).then((function(t){e._element.querySelector(".element__like__counter").textContent=t.likes.length,e._element.querySelector(".element__like").classList.remove("element__like_active")})).catch((function(e){console.log("Ошибка при удалении лайка карточки".concat(e))}))}ae.getCards().then((function(e){ce.renderItems(e)})).catch((function(e){console.log((function(e){console.log(e)}))})),ae.getProfileInfo().then((function(e){console.log("User id:",e._id);var t=(re=new R(e)).getUserInfo();document.querySelector(".profile__title").textContent=t.name,document.querySelector(".profile__avatar").alt=t.name,document.querySelector(".profile__avatar").src=t.avatar,document.querySelector(".profile__subtitle").textContent=t.about})).catch((function(e){console.log((function(e){console.log(e)}))})),D.addEventListener("click",(function(){te.open(),Y.disableSubmitButton()})),x.addEventListener("click",(function(){var e;e=ie.getUserInfo(),z.value=e.name,N.value=e.about,ee.open()})),H.addEventListener("mouseenter",(function(){J.classList.remove("profile__avatar__overlay_closed")})),H.addEventListener("mouseleave",(function(){J.classList.add("profile__avatar__overlay_closed")})),J.addEventListener("click",(function(){var e;e=ie.getUserInfo(),F.value=e.avatar,oe.open(),J.classList.add("profile__avatar__overlay_closed")}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,